{
    "openapi": "3.0.3",
    "info": {
        "title": "openobserve",
        "description": "OpenObserve API documents [https://openobserve.ai/docs/](https://openobserve.ai/docs/)",
        "contact": {
            "name": "OpenObserve",
            "url": "https://openobserve.ai/",
            "email": "hello@zinclabs.io"
        },
        "license": {
            "name": "AGPL-3.0-only"
        },
        "version": "0.10.8"
    },
    "paths": {
        "/api/clusters": {
            "get": {
                "tags": [
                    "Clusters"
                ],
                "summary": "ListClusters",
                "operationId": "ListClusters",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/organizations": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "GetOrganizations",
                "operationId": "GetUserOrganizations",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/_bulk": {
            "post": {
                "tags": [
                    "Logs"
                ],
                "summary": "_bulk ES compatible ingestion API",
                "operationId": "LogsIngestionBulk",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Ingest data (ndjson)",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulkResponse"
                                },
                                "example": {
                                    "errors": true,
                                    "items": [
                                        {
                                            "index": {
                                                "_id": 1,
                                                "_index": "olympics",
                                                "error": {
                                                    "index": "olympics",
                                                    "index_uuid": "1",
                                                    "reason": "Too old data, only last 5 hours data can be ingested. Data discarded.",
                                                    "shard": "1",
                                                    "type": "Too old data, only last 5 hours data can be ingested. Data discarded."
                                                },
                                                "original_record": {
                                                    "athlete": "CHASAPIS, Spiridon",
                                                    "city": "BER",
                                                    "country": "USA",
                                                    "discipline": "Swimming",
                                                    "event": "100M Freestyle For Sailors",
                                                    "gender": "Men",
                                                    "medal": "Silver",
                                                    "onemore": 1,
                                                    "season": "summer",
                                                    "sport": "Aquatics",
                                                    "year": 1986
                                                },
                                                "status": 200
                                            }
                                        }
                                    ],
                                    "took": 2
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/_search": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "SearchStreamData",
                "operationId": "SearchSQL",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Search query",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchRequest"
                            },
                            "example": {
                                "aggs": {
                                    "histogram": "select histogram(_timestamp, '30 second') AS zo_sql_key, count(*) AS zo_sql_num from query GROUP BY zo_sql_key ORDER BY zo_sql_key"
                                },
                                "query": {
                                    "end_time": 1675185660872049,
                                    "from": 0,
                                    "size": 10,
                                    "sql": "select * from k8s ",
                                    "start_time": 1675182660872049
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResponse"
                                },
                                "example": {
                                    "aggs": {
                                        "agg1": [
                                            {
                                                "key": "2023-01-15 14:00:00",
                                                "num": 345940
                                            },
                                            {
                                                "key": "2023-01-15 19:00:00",
                                                "num": 384026
                                            }
                                        ]
                                    },
                                    "from": 0,
                                    "hits": [
                                        {
                                            "_p": "F",
                                            "_timestamp": 1674213225158000,
                                            "kubernetes": {
                                                "container_hash": "dkr.ecr.us-west-2.amazonaws.com/openobserve@sha256:3dbbb0dc1eab2d5a3b3e4a75fd87d194e8095c92d7b2b62e7cdbd07020f54589",
                                                "container_image": "dkr.ecr.us-west-2.amazonaws.com/openobserve:v0.0.3",
                                                "container_name": "openobserve",
                                                "docker_id": "eb0983bdb9ff9360d227e6a0b268fe3b24a0868c2c2d725a1516c11e88bf5789",
                                                "host": "ip.us-east-2.compute.internal",
                                                "namespace_name": "openobserve",
                                                "pod_id": "35a0421f-9203-4d73-9663-9ff0ce26d409",
                                                "pod_name": "openobserve-ingester-0"
                                            },
                                            "log": "[2023-01-20T11:13:45Z INFO  actix_web::middleware::logger] 10.2.80.192 \"POST /api/demo/_bulk HTTP/1.1\" 200 68",
                                            "stream": "stderr"
                                        }
                                    ],
                                    "scan_size": 28943,
                                    "size": 1,
                                    "took": 155,
                                    "total": 27179431
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/_search_partition": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "SearchStreamPartition",
                "operationId": "SearchPartition",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Search query",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchRequest"
                            },
                            "example": {
                                "end_time": 1675185660872049,
                                "sql": "select * from k8s ",
                                "start_time": 1675182660872049
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResponse"
                                },
                                "example": {
                                    "compressed_size": 1024,
                                    "file_num": 10,
                                    "original_size": 10240,
                                    "partitions": [
                                        [
                                            1674213225158000,
                                            1674213225158000
                                        ],
                                        [
                                            1674213225158000,
                                            1674213225158000
                                        ]
                                    ],
                                    "took": 155
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/alerts": {
            "get": {
                "tags": [
                    "Alerts"
                ],
                "summary": "ListAlerts",
                "operationId": "ListAlerts",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/alerts/destinations": {
            "get": {
                "tags": [
                    "Alerts"
                ],
                "summary": "ListDestinations",
                "operationId": "ListDestinations",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Destination"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Alerts"
                ],
                "summary": "CreateDestination",
                "operationId": "CreateDestination",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Destination data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Destination"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/alerts/destinations/{destination_name}": {
            "get": {
                "tags": [
                    "Alerts"
                ],
                "summary": "GetDestination",
                "operationId": "GetDestination",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "destination_name",
                        "in": "path",
                        "description": "Destination name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Destination"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Alerts"
                ],
                "summary": "UpdateDestination",
                "operationId": "UpdateDestination",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "destination_name",
                        "in": "path",
                        "description": "Destination name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Destination data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Destination"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Alerts"
                ],
                "summary": "DeleteDestination",
                "operationId": "DeleteAlertDestination",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "destination_name",
                        "in": "path",
                        "description": "Destination name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/alerts/templates": {
            "get": {
                "tags": [
                    "Alerts"
                ],
                "summary": "ListTemplates",
                "operationId": "ListTemplates",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Template"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Alerts"
                ],
                "summary": "CreateTemplate",
                "operationId": "CreateTemplate",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Template data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Template"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/alerts/templates/{template_name}": {
            "get": {
                "tags": [
                    "Alerts"
                ],
                "summary": "GetTemplateByName",
                "operationId": "GetTemplate",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "template_name",
                        "in": "path",
                        "description": "Template name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Template"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Alerts"
                ],
                "summary": "UpdateTemplate",
                "operationId": "UpdateTemplate",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "template_name",
                        "in": "path",
                        "description": "Template name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Template data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Template"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Alerts"
                ],
                "summary": "DeleteTemplate",
                "operationId": "DeleteAlertTemplate",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "template_name",
                        "in": "path",
                        "description": "Template name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/dashboards": {
            "get": {
                "tags": [
                    "Dashboards"
                ],
                "summary": "ListDashboards",
                "operationId": "ListDashboards",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Dashboards"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Dashboards"
                ],
                "summary": "CreateDashboard",
                "operationId": "CreateDashboard",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Dashboard details",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Dashboard"
                            },
                            "example": {
                                "description": "Traffic patterns and network performance of the infrastructure",
                                "title": "Network Traffic Overview"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Dashboard created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Dashboard"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/dashboards/{dashboard_id}": {
            "get": {
                "tags": [
                    "Dashboards"
                ],
                "summary": "GetDashboard",
                "operationId": "GetDashboard",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dashboard_id",
                        "in": "path",
                        "description": "Dashboard ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Dashboard"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Dashboard not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Dashboards"
                ],
                "summary": "UpdateDashboard",
                "operationId": "UpdateDashboard",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dashboard_id",
                        "in": "path",
                        "description": "Dashboard ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Dashboard details",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Dashboard"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Dashboard updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Dashboard not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to update the dashboard",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Dashboards"
                ],
                "summary": "DeleteDashboard",
                "operationId": "DeleteDashboard",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dashboard_id",
                        "in": "path",
                        "description": "Dashboard ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/enrichment_tables/{table_name}": {
            "post": {
                "tags": [
                    "Functions"
                ],
                "summary": "CreateEnrichmentTable",
                "operationId": "CreateUpdateEnrichmentTable",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "table_name",
                        "in": "path",
                        "description": "Table name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Saved enrichment table",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/folders": {
            "get": {
                "tags": [
                    "Dashboards"
                ],
                "summary": "ListFolders",
                "operationId": "ListFolders",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FolderList"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Dashboards"
                ],
                "summary": "CreateFolder",
                "operationId": "CreateFolder",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Folder details",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Folder"
                            },
                            "example": {
                                "description": "Traffic patterns and network performance of the infrastructure",
                                "name": "Infrastructure"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Folder created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Folder"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/folders/dashboards/{dashboard_id}": {
            "put": {
                "tags": [
                    "Dashboards"
                ],
                "summary": "MoveDashboard",
                "operationId": "MoveDashboard",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dashboard_id",
                        "in": "path",
                        "description": "Dashboard ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "MoveDashboard details",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MoveDashboard"
                            },
                            "example": {
                                "from": "Source folder id",
                                "to": "Destination folder id"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Dashboard Moved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Dashboard not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/folders/{folder_id}": {
            "get": {
                "tags": [
                    "Dashboards"
                ],
                "summary": "GetFolder",
                "operationId": "GetFolder",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "folder_id",
                        "in": "path",
                        "description": "Folder ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Folder"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Folder not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Dashboards"
                ],
                "summary": "UpdateFolder",
                "operationId": "UpdateFolder",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "folder_id",
                        "in": "path",
                        "description": "Folder name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Folder details",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Folder"
                            },
                            "example": {
                                "description": "Traffic patterns and network performance of the infrastructure",
                                "title": "Infra"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Folder updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Folder"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Dashboards"
                ],
                "summary": "DeleteFolder",
                "operationId": "DeleteFolder",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "folder_id",
                        "in": "path",
                        "description": "Folder ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/functions": {
            "get": {
                "tags": [
                    "Functions"
                ],
                "summary": "ListFunctions",
                "operationId": "listFunctions",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FunctionList"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Functions"
                ],
                "summary": "CreateFunction",
                "operationId": "createFunction",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Function data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Transform"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/functions/{name}": {
            "put": {
                "tags": [
                    "Functions"
                ],
                "summary": "UpdateFunction",
                "operationId": "updateFunction",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Function name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Function data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Transform"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Functions"
                ],
                "summary": "DeleteFunction",
                "operationId": "deleteFunction",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Function name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/ingest/metrics/_json": {
            "post": {
                "tags": [
                    "Metrics"
                ],
                "summary": "_json ingestion API",
                "operationId": "MetricsIngestionJson",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Ingest data (json array)",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            },
                            "example": [
                                {
                                    "__name__": "metrics stream name",
                                    "__type__": "counter / gauge / histogram / summary",
                                    "_timestamp": 1687175143,
                                    "label_name1": "label_value1",
                                    "label_name2": "label_value2",
                                    "value": 1.2
                                }
                            ]
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IngestionResponse"
                                },
                                "example": {
                                    "code": 200,
                                    "status": [
                                        {
                                            "failed": 0,
                                            "name": "up",
                                            "successful": 3
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/kv": {
            "get": {
                "tags": [
                    "KV"
                ],
                "summary": "ListKeys",
                "operationId": "ListKVKeys",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "prefix",
                        "in": "query",
                        "description": "Key prefix",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/kv/{key}": {
            "get": {
                "tags": [
                    "KV"
                ],
                "summary": "GetValue",
                "operationId": "GetKVValue",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "description": "Key name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "KV"
                ],
                "summary": "SetValue",
                "operationId": "SetKVValue",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "description": "Key name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Value of the key",
                    "content": {
                        "text/plain": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "KV"
                ],
                "summary": "RemoveValue",
                "operationId": "RemoveKVValue",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "description": "Key name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/passcode": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "GetIngestToken",
                "operationId": "GetOrganizationUserIngestToken",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PasscodeResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Organizations"
                ],
                "summary": "UpdateIngestToken",
                "operationId": "UpdateOrganizationUserIngestToken",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PasscodeResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/prometheus/api/v1/format_query": {
            "get": {
                "tags": [
                    "Metrics"
                ],
                "summary": "prometheus formatting query expressions",
                "operationId": "PrometheusFormatQuery",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Prometheus expression query string.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "org_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                },
                                "example": {
                                    "data": "foo / bar",
                                    "status": "success"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/prometheus/api/v1/label/{label_name}/values": {
            "get": {
                "tags": [
                    "Metrics"
                ],
                "summary": "prometheus query label values",
                "operationId": "PrometheusLabelValues",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "label_name",
                        "in": "path",
                        "description": "Label name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "match[]",
                        "in": "query",
                        "description": "Series selector argument that selects the series from which to read the label values",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "<rfc3339 | unix_timestamp>: Start timestamp",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "<rfc3339 | unix_timestamp>: End timestamp",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                },
                                "example": {
                                    "data": [
                                        "node",
                                        "prometheus"
                                    ],
                                    "status": "success"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/prometheus/api/v1/labels": {
            "get": {
                "tags": [
                    "Metrics"
                ],
                "summary": "prometheus getting label names",
                "operationId": "PrometheusLabels",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "match[]",
                        "in": "query",
                        "description": "Series selector argument that selects the series from which to read the label names",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "<rfc3339 | unix_timestamp>: Start timestamp",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "<rfc3339 | unix_timestamp>: End timestamp",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                },
                                "example": {
                                    "data": [
                                        "__name__",
                                        "call",
                                        "code",
                                        "config",
                                        "dialer_name",
                                        "endpoint",
                                        "event",
                                        "goversion",
                                        "handler",
                                        "instance",
                                        "interval",
                                        "job",
                                        "le",
                                        "listener_name",
                                        "name",
                                        "quantile",
                                        "reason",
                                        "role",
                                        "scrape_job",
                                        "slice",
                                        "version"
                                    ],
                                    "status": "success"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/prometheus/api/v1/metadata": {
            "get": {
                "tags": [
                    "Metrics"
                ],
                "summary": "prometheus query metric metadata",
                "operationId": "PrometheusMetadata",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of metrics to return",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "metric",
                        "in": "query",
                        "description": "A metric name to filter metadata for. All metric metadata is retrieved if left empty",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                },
                                "example": {
                                    "data": {
                                        "cortex_ring_tokens": [
                                            {
                                                "help": "Number of tokens in the ring",
                                                "type": "gauge",
                                                "unit": ""
                                            }
                                        ],
                                        "http_requests_total": [
                                            {
                                                "help": "Number of HTTP requests",
                                                "type": "counter",
                                                "unit": ""
                                            },
                                            {
                                                "help": "Amount of HTTP requests",
                                                "type": "counter",
                                                "unit": ""
                                            }
                                        ]
                                    },
                                    "status": "success"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/prometheus/api/v1/query": {
            "get": {
                "tags": [
                    "Metrics"
                ],
                "summary": "prometheus instant queries",
                "operationId": "PrometheusQuery",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Prometheus expression query string",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "time",
                        "in": "query",
                        "description": "<rfc3339 | unix_timestamp>: Evaluation timestamp. Optional",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "description": "Evaluation timeout",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                },
                                "example": {
                                    "data": {
                                        "result": [
                                            {
                                                "metric": {
                                                    "__name__": "up",
                                                    "instance": "localhost:9090",
                                                    "job": "prometheus"
                                                },
                                                "value": [
                                                    1435781451.781,
                                                    "1"
                                                ]
                                            },
                                            {
                                                "metric": {
                                                    "__name__": "up",
                                                    "instance": "localhost:9100",
                                                    "job": "node"
                                                },
                                                "value": [
                                                    1435781451.781,
                                                    "0"
                                                ]
                                            }
                                        ],
                                        "resultType": "vector"
                                    },
                                    "status": "success"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/prometheus/api/v1/query_range": {
            "get": {
                "tags": [
                    "Metrics"
                ],
                "summary": "prometheus range queries",
                "operationId": "PrometheusRangeQuery",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Prometheus expression query string",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "<rfc3339 | unix_timestamp>: Start timestamp, inclusive",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "<rfc3339 | unix_timestamp>: End timestamp, inclusive",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "step",
                        "in": "query",
                        "description": "Query resolution step width in duration format or float number of seconds",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "description": "Evaluation timeout",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                },
                                "example": {
                                    "data": {
                                        "result": [
                                            {
                                                "metric": {
                                                    "__name__": "up",
                                                    "instance": "localhost:9090",
                                                    "job": "prometheus"
                                                },
                                                "values": [
                                                    [
                                                        1435781430.781,
                                                        "1"
                                                    ],
                                                    [
                                                        1435781445.781,
                                                        "1"
                                                    ],
                                                    [
                                                        1435781460.781,
                                                        "1"
                                                    ]
                                                ]
                                            },
                                            {
                                                "metric": {
                                                    "__name__": "up",
                                                    "instance": "localhost:9091",
                                                    "job": "node"
                                                },
                                                "values": [
                                                    [
                                                        1435781430.781,
                                                        "0"
                                                    ],
                                                    [
                                                        1435781445.781,
                                                        "0"
                                                    ],
                                                    [
                                                        1435781460.781,
                                                        "1"
                                                    ]
                                                ]
                                            }
                                        ],
                                        "resultType": "matrix"
                                    },
                                    "status": "success"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/prometheus/api/v1/series": {
            "get": {
                "tags": [
                    "Metrics"
                ],
                "summary": "prometheus finding series by label matchers",
                "operationId": "PrometheusSeries",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "match[]",
                        "in": "query",
                        "description": "<series_selector>: Series selector argument that selects the series to return",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "<rfc3339 | unix_timestamp>: Start timestamp",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "<rfc3339 | unix_timestamp>: End timestamp",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                },
                                "example": {
                                    "data": [
                                        {
                                            "__name__": "up",
                                            "instance": "localhost:9090",
                                            "job": "prometheus"
                                        },
                                        {
                                            "__name__": "up",
                                            "instance": "localhost:9091",
                                            "job": "node"
                                        },
                                        {
                                            "__name__": "process_start_time_seconds",
                                            "instance": "localhost:9090",
                                            "job": "prometheus"
                                        }
                                    ],
                                    "status": "success"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/prometheus/api/v1/write": {
            "post": {
                "tags": [
                    "Metrics"
                ],
                "summary": "prometheus remote-write endpoint for metrics",
                "operationId": "PrometheusRemoteWrite",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "prometheus WriteRequest",
                    "content": {
                        "application/x-protobuf": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IngestionResponse"
                                },
                                "example": {
                                    "code": 200
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/rumtoken": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "GetRumIngestToken",
                "operationId": "GetOrganizationUserRumIngestToken",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RumIngestionResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Organizations"
                ],
                "summary": "CreateRumIngestToken",
                "operationId": "CreateOrganizationUserRumIngestToken",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RumIngestionResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Organizations"
                ],
                "summary": "UpdateRumIngestToken",
                "operationId": "UpdateOrganizationUserRumIngestToken",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RumIngestionResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/savedviews": {
            "get": {
                "tags": [
                    "Saved Views"
                ],
                "operationId": "ListSavedViews",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ViewsWithoutData"
                                },
                                "example": [
                                    {
                                        "org_id": "some-org-id",
                                        "payload": "base-64-encoded-versioned-payload",
                                        "view_id": "view-id",
                                        "view_name": "view-name"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Saved Views"
                ],
                "operationId": "CreateSavedViews",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Create view data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateViewRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateViewResponse"
                                },
                                "example": [
                                    {
                                        "org_id": "some-org-id",
                                        "view_id": "view_id"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/savedviews/{view_id}": {
            "get": {
                "tags": [
                    "Saved Views"
                ],
                "operationId": "GetSavedView",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "view_id",
                        "in": "path",
                        "description": "The view_id which was stored",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/View"
                                },
                                "example": {
                                    "org_id": "some-org-id",
                                    "payload": "base64-encoded-object-as-sent-by-frontend",
                                    "view_id": "some-uuid-v4",
                                    "view_name": "view-name"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Saved Views"
                ],
                "operationId": "UpdateSavedViews",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "view_id",
                        "in": "path",
                        "description": "View id to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update view data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateViewRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/View"
                                },
                                "example": [
                                    {
                                        "org_id": "some-org-id",
                                        "payload": "base-64-encoded-versioned-payload",
                                        "view_id": "view-id",
                                        "view_name": "view-name"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Saved Views"
                ],
                "operationId": "DeleteSavedViews",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "view_id",
                        "in": "path",
                        "description": "The view_id to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteViewResponse"
                                },
                                "example": [
                                    {
                                        "org_id": "some-org-id",
                                        "view_id": "view_id"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/settings": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Retrieve organization specific settings",
                "operationId": "OrganizationSettingGet",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Organization specific settings",
                "operationId": "OrganizationSettingCreate",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Organization settings",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationSetting"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/streams": {
            "get": {
                "tags": [
                    "Streams"
                ],
                "summary": "ListStreams",
                "operationId": "StreamList",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListStream"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/streams/{stream_name}": {
            "delete": {
                "tags": [
                    "Streams"
                ],
                "summary": "DeleteStream",
                "operationId": "StreamDelete",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_name",
                        "in": "path",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/streams/{stream_name}/delete_fields": {
            "put": {
                "tags": [
                    "Streams"
                ],
                "summary": "DeleteStreamFields",
                "operationId": "StreamDeleteFields",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_name",
                        "in": "path",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Stream delete fields",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StreamDeleteFields"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/streams/{stream_name}/functions": {
            "get": {
                "tags": [
                    "Functions"
                ],
                "summary": "ListStreamFunctions",
                "operationId": "listStreamFunctions",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_name",
                        "in": "path",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StreamFunctionsList"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/streams/{stream_name}/functions/{name}": {
            "put": {
                "tags": [
                    "Functions"
                ],
                "summary": "ApplyFunctionToStream",
                "operationId": "applyFunctionToStream",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_name",
                        "in": "path",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Function name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Function data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StreamOrder"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Functions"
                ],
                "summary": "RemoveStreamFunction",
                "operationId": "removeStreamFunction",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_name",
                        "in": "path",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Function name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/streams/{stream_name}/schema": {
            "get": {
                "tags": [
                    "Streams"
                ],
                "summary": "GetSchema",
                "operationId": "StreamSchema",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_name",
                        "in": "path",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Stream"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/streams/{stream_name}/settings": {
            "put": {
                "tags": [
                    "Streams"
                ],
                "summary": "UpdateStreamSettings",
                "operationId": "StreamSettings",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_name",
                        "in": "path",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Stream settings",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StreamSettings"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/summary": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "GetOrganizationSummary",
                "operationId": "GetOrganizationSummary",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrgSummary"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/syslog-routes": {
            "get": {
                "tags": [
                    "Syslog Routes"
                ],
                "summary": "ListSyslogRoutes",
                "operationId": "ListSyslogRoutes",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SyslogRoutes"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Syslog Routes"
                ],
                "summary": "CreateSyslogRoute",
                "operationId": "CreateSyslogRoute",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "SyslogRoute details",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SyslogRoute"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Route created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SyslogRoute"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/syslog-routes/{id}": {
            "put": {
                "tags": [
                    "Syslog Routes"
                ],
                "summary": "UpdateSyslogRoute",
                "operationId": "UpdateSyslogRoute",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Route ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "SyslogRoute details",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SyslogRoute"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "SyslogRoute updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SyslogRoute"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "SyslogRoute not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to update the SyslogRoute",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Syslog Routes"
                ],
                "summary": "DeleteSyslogRoute",
                "operationId": "DeleteSyslogRoute",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SyslogRoute Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Route deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Route not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/traces": {
            "post": {
                "tags": [
                    "Traces"
                ],
                "summary": "TracesIngest",
                "operationId": "PostTraces",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "ExportTraceServiceRequest",
                    "content": {
                        "application/x-protobuf": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IngestionResponse"
                                },
                                "example": {
                                    "code": 200
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "ListUsers",
                "operationId": "UserList",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserList"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "CreateUser",
                "operationId": "UserSave",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/users/{email_id}": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "AddUserToOrganization",
                "operationId": "AddUserToOrg",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email_id",
                        "in": "path",
                        "description": "User's email id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User role",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserOrgRole"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "UpdateUser",
                "operationId": "UserUpdate",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email_id",
                        "in": "path",
                        "description": "User's email id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUser"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "RemoveUserFromOrganization",
                "operationId": "RemoveUserFromOrg",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email_id",
                        "in": "path",
                        "description": "User name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/{stream_name}/_around": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "SearchAround",
                "operationId": "SearchAround",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_name",
                        "in": "path",
                        "description": "stream_name name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "description": "around key",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "around size",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "regions",
                        "in": "query",
                        "description": "regions, split by comma",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "description": "timeout, seconds",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResponse"
                                },
                                "example": {
                                    "from": 0,
                                    "hits": [
                                        {
                                            "_p": "F",
                                            "_timestamp": 1674213225158000,
                                            "kubernetes": {
                                                "container_hash": "dkr.ecr.us-west-2.amazonaws.com/openobserve@sha256:3dbbb0dc1eab2d5a3b3e4a75fd87d194e8095c92d7b2b62e7cdbd07020f54589",
                                                "container_image": "dkr.ecr.us-west-2.amazonaws.com/openobserve:v0.0.3",
                                                "container_name": "openobserve",
                                                "docker_id": "eb0983bdb9ff9360d227e6a0b268fe3b24a0868c2c2d725a1516c11e88bf5789",
                                                "host": "ip.us-east-2.compute.internal",
                                                "namespace_name": "openobserve",
                                                "pod_id": "35a0421f-9203-4d73-9663-9ff0ce26d409",
                                                "pod_name": "openobserve-ingester-0"
                                            },
                                            "log": "[2023-01-20T11:13:45Z INFO  actix_web::middleware::logger] 10.2.80.192 \"POST /api/demo/_bulk HTTP/1.1\" 200 68",
                                            "stream": "stderr"
                                        }
                                    ],
                                    "scan_size": 28943,
                                    "size": 10,
                                    "took": 155,
                                    "total": 10
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/{stream_name}/_json": {
            "post": {
                "tags": [
                    "Logs"
                ],
                "summary": "_json ingestion API",
                "operationId": "LogsIngestionJson",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_name",
                        "in": "path",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Ingest data (json array)",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            },
                            "example": [
                                {
                                    "Athlete": "Alfred",
                                    "City": "Athens",
                                    "Country": "HUN",
                                    "Discipline": "Swimming",
                                    "Sport": "Aquatics",
                                    "Year": 1896
                                },
                                {
                                    "Athlete": "HERSCHMANN",
                                    "City": "Athens",
                                    "Country": "CHN",
                                    "Discipline": "Swimming",
                                    "Sport": "Aquatics",
                                    "Year": 1896
                                }
                            ]
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IngestionResponse"
                                },
                                "example": {
                                    "code": 200,
                                    "status": [
                                        {
                                            "failed": 0,
                                            "name": "olympics",
                                            "successful": 3
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/{stream_name}/_multi": {
            "post": {
                "tags": [
                    "Logs"
                ],
                "summary": "_multi ingestion API",
                "operationId": "LogsIngestionMulti",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_name",
                        "in": "path",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Ingest data (multiple line json)",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IngestionResponse"
                                },
                                "example": {
                                    "code": 200,
                                    "status": [
                                        {
                                            "failed": 0,
                                            "name": "olympics",
                                            "successful": 3
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/{stream_name}/_values": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "SearchTopNValues",
                "operationId": "SearchValues",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_name",
                        "in": "path",
                        "description": "stream_name name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "fields, split by comma",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter, eg: a=b",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "keyword, eg: abc",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "size",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "start_time",
                        "in": "query",
                        "description": "start time",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "end_time",
                        "in": "query",
                        "description": "end time",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "regions",
                        "in": "query",
                        "description": "regions, split by comma",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "description": "timeout, seconds",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResponse"
                                },
                                "example": {
                                    "took": 155,
                                    "values": [
                                        {
                                            "field": "field1",
                                            "values": [
                                                "value1",
                                                "value2"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/{stream_name}/alerts": {
            "get": {
                "tags": [
                    "Alerts"
                ],
                "summary": "ListStreamAlerts",
                "operationId": "ListStreamAlerts",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_name",
                        "in": "path",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Alerts"
                ],
                "summary": "CreateAlert",
                "operationId": "SaveAlert",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_name",
                        "in": "path",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Alert data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Alert"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/{stream_name}/alerts/{alert_name}": {
            "get": {
                "tags": [
                    "Alerts"
                ],
                "summary": "GetAlertByName",
                "operationId": "GetAlert",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_name",
                        "in": "path",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "alert_name",
                        "in": "path",
                        "description": "Alert name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Alert"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Alerts"
                ],
                "summary": "UpdateAlert",
                "operationId": "UpdateAlert",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_name",
                        "in": "path",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "alert_name",
                        "in": "path",
                        "description": "Alert name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Alert data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Alert"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Alerts"
                ],
                "summary": "DeleteAlert",
                "operationId": "DeleteAlert",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_name",
                        "in": "path",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "alert_name",
                        "in": "path",
                        "description": "Alert name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/{stream_name}/alerts/{alert_name}/enable": {
            "put": {
                "tags": [
                    "Alerts"
                ],
                "summary": "EnableAlert",
                "operationId": "EnableAlert",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_name",
                        "in": "path",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "alert_name",
                        "in": "path",
                        "description": "Alert name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "description": "Enable or disable alert",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/{stream_name}/alerts/{alert_name}/trigger": {
            "put": {
                "tags": [
                    "Alerts"
                ],
                "summary": "TriggerAlert",
                "operationId": "TriggerAlert",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_name",
                        "in": "path",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "alert_name",
                        "in": "path",
                        "description": "Alert name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/{org_id}/{stream_name}/traces/latest": {
            "get": {
                "tags": [
                    "Traces"
                ],
                "summary": "GetLatestTraces",
                "operationId": "GetLatestTraces",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_name",
                        "in": "path",
                        "description": "Stream name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter, eg: a=b AND c=d",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "from",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "size",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "start_time",
                        "in": "query",
                        "description": "start time",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "end_time",
                        "in": "query",
                        "description": "end time",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "description": "timeout, seconds",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResponse"
                                },
                                "example": {
                                    "hits": [
                                        {
                                            "first_event": {
                                                "operation_name": "operation_name",
                                                "start_time": 1234567890
                                            },
                                            "service_name": [
                                                {
                                                    "job1": 1,
                                                    "job2": 0
                                                }
                                            ],
                                            "spans": [
                                                1,
                                                2
                                            ],
                                            "trace_id": "12345678"
                                        }
                                    ],
                                    "took": 155
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/healthz": {
            "get": {
                "tags": [
                    "Meta"
                ],
                "summary": "Healthz",
                "operationId": "healthz",
                "responses": {
                    "200": {
                        "description": "Staus OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthzResponse"
                                },
                                "example": {
                                    "status": "ok"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rum/v1/{org_id}/logs": {
            "post": {
                "tags": [
                    "Rum"
                ],
                "summary": "Rum log ingestion API",
                "operationId": "LogIngestionJson",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Ingest data (json array)",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            },
                            "example": [
                                {
                                    "Athlete": "Alfred",
                                    "City": "Athens",
                                    "Country": "HUN",
                                    "Discipline": "Swimming",
                                    "Sport": "Aquatics",
                                    "Year": 1896
                                },
                                {
                                    "Athlete": "HERSCHMANN",
                                    "City": "Athens",
                                    "Country": "CHN",
                                    "Discipline": "Swimming",
                                    "Sport": "Aquatics",
                                    "Year": 1896
                                }
                            ]
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IngestionResponse"
                                },
                                "example": {
                                    "code": 200,
                                    "status": [
                                        {
                                            "failed": 0,
                                            "name": "olympics",
                                            "successful": 3
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/rum/v1/{org_id}/replay": {
            "post": {
                "tags": [
                    "Rum"
                ],
                "summary": "Rum session-replay ingestion API",
                "operationId": "ReplayIngestionJson",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Ingest data (json array)",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            },
                            "example": [
                                {
                                    "Athlete": "Alfred",
                                    "City": "Athens",
                                    "Country": "HUN",
                                    "Discipline": "Swimming",
                                    "Sport": "Aquatics",
                                    "Year": 1896
                                },
                                {
                                    "Athlete": "HERSCHMANN",
                                    "City": "Athens",
                                    "Country": "CHN",
                                    "Discipline": "Swimming",
                                    "Sport": "Aquatics",
                                    "Year": 1896
                                }
                            ]
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IngestionResponse"
                                },
                                "example": {
                                    "code": 200,
                                    "status": [
                                        {
                                            "failed": 0,
                                            "name": "olympics",
                                            "successful": 3
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/rum/v1/{org_id}/rum": {
            "post": {
                "tags": [
                    "Rum"
                ],
                "summary": "Rum data ingestion API",
                "operationId": "RumIngestionMulti",
                "parameters": [
                    {
                        "name": "org_id",
                        "in": "path",
                        "description": "Organization name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Ingest data (multiple line json)",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IngestionResponse"
                                },
                                "example": {
                                    "code": 200,
                                    "status": [
                                        {
                                            "failed": 0,
                                            "name": "olympics",
                                            "successful": 3
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "AggFunction": {
                "type": "string",
                "enum": [
                    "avg",
                    "min",
                    "max",
                    "sum",
                    "count",
                    "p50",
                    "p75",
                    "p90",
                    "p95",
                    "p99"
                ]
            },
            "Aggregation": {
                "type": "object",
                "required": [
                    "function",
                    "having"
                ],
                "properties": {
                    "function": {
                        "$ref": "#/components/schemas/AggFunction"
                    },
                    "group_by": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "having": {
                        "$ref": "#/components/schemas/Condition"
                    }
                }
            },
            "AggregationFunc": {
                "type": "string",
                "enum": [
                    "count",
                    "count-distinct",
                    "histogram",
                    "sum",
                    "min",
                    "max",
                    "avg"
                ]
            },
            "Alert": {
                "type": "object",
                "required": [
                    "destinations"
                ],
                "properties": {
                    "context_attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "destinations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "is_real_time": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "org_id": {
                        "type": "string"
                    },
                    "query_condition": {
                        "$ref": "#/components/schemas/QueryCondition"
                    },
                    "row_template": {
                        "type": "string"
                    },
                    "stream_name": {
                        "type": "string"
                    },
                    "stream_type": {
                        "$ref": "#/components/schemas/StreamType"
                    },
                    "trigger_condition": {
                        "$ref": "#/components/schemas/TriggerCondition"
                    },
                    "tz_offset": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Timezone offset in minutes.\nThe negative secs means the Western Hemisphere"
                    }
                }
            },
            "AlertFrequencyType": {
                "type": "string",
                "enum": [
                    "cron",
                    "minutes"
                ]
            },
            "AxisItem": {
                "type": "object",
                "required": [
                    "label",
                    "alias",
                    "column"
                ],
                "properties": {
                    "aggregationFunction": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AggregationFunc"
                            }
                        ],
                        "nullable": true
                    },
                    "alias": {
                        "type": "string"
                    },
                    "color": {
                        "type": "string",
                        "nullable": true
                    },
                    "column": {
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    }
                }
            },
            "BulkResponse": {
                "type": "object",
                "required": [
                    "took",
                    "errors",
                    "items"
                ],
                "properties": {
                    "errors": {
                        "type": "boolean"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/components/schemas/BulkResponseItem"
                            }
                        }
                    },
                    "took": {
                        "type": "integer",
                        "minimum": 0
                    }
                }
            },
            "BulkResponseError": {
                "type": "object",
                "required": [
                    "type",
                    "reason",
                    "index_uuid",
                    "shard",
                    "index"
                ],
                "properties": {
                    "index": {
                        "type": "string"
                    },
                    "index_uuid": {
                        "type": "string"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "shard": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "BulkResponseItem": {
                "type": "object",
                "required": [
                    "_index",
                    "_id",
                    "status"
                ],
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "_index": {
                        "type": "string"
                    },
                    "_primary_term": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "_seq_no": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "_shards": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ShardResponse"
                            }
                        ],
                        "nullable": true
                    },
                    "_version": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "error": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/BulkResponseError"
                            }
                        ],
                        "nullable": true
                    },
                    "originalRecord": {
                        "type": "object"
                    },
                    "result": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "CancelQueryResponse": {
                "type": "object",
                "required": [
                    "trace_id",
                    "is_success"
                ],
                "properties": {
                    "is_success": {
                        "type": "boolean"
                    },
                    "trace_id": {
                        "type": "string"
                    }
                }
            },
            "Condition": {
                "type": "object",
                "required": [
                    "column",
                    "operator",
                    "value"
                ],
                "properties": {
                    "column": {
                        "type": "string"
                    },
                    "ignore_case": {
                        "type": "boolean"
                    },
                    "operator": {
                        "$ref": "#/components/schemas/Operator"
                    },
                    "value": {
                        "type": "object"
                    }
                }
            },
            "CreateViewRequest": {
                "type": "object",
                "required": [
                    "data",
                    "view_name"
                ],
                "properties": {
                    "data": {
                        "description": "Base64 encoded string, containing all the data for a given view.\nThis data is expected to be versioned so that the frontend can\ndeserialize as required."
                    },
                    "view_name": {
                        "type": "string",
                        "description": "User-readable name of the view, doesn't need to be unique."
                    }
                }
            },
            "CreateViewResponse": {
                "type": "object",
                "required": [
                    "org_id",
                    "view_id",
                    "view_name"
                ],
                "properties": {
                    "org_id": {
                        "type": "string"
                    },
                    "view_id": {
                        "type": "string"
                    },
                    "view_name": {
                        "type": "string"
                    }
                }
            },
            "CustomFieldsOption": {
                "type": "object",
                "required": [
                    "label",
                    "value"
                ],
                "properties": {
                    "label": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "Dashboard": {
                "type": "object",
                "required": [
                    "title",
                    "description"
                ],
                "properties": {
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "dashboardId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "layouts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Layout"
                        },
                        "nullable": true
                    },
                    "owner": {
                        "type": "string"
                    },
                    "panels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Panel"
                        }
                    },
                    "role": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "variables": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Variables"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "Dashboards": {
                "type": "object",
                "required": [
                    "dashboards"
                ],
                "properties": {
                    "dashboards": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Dashboard"
                        }
                    }
                }
            },
            "DeleteViewResponse": {
                "type": "object",
                "required": [
                    "org_id",
                    "view_id"
                ],
                "properties": {
                    "org_id": {
                        "type": "string"
                    },
                    "view_id": {
                        "type": "string"
                    }
                }
            },
            "Destination": {
                "type": "object",
                "required": [
                    "template"
                ],
                "properties": {
                    "emails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Required when `destination_type` is `Email`"
                    },
                    "headers": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "method": {
                        "$ref": "#/components/schemas/HTTPType"
                    },
                    "name": {
                        "type": "string"
                    },
                    "skip_tls_verify": {
                        "type": "boolean"
                    },
                    "template": {
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/DestinationType"
                    },
                    "url": {
                        "type": "string",
                        "description": "Required for `Http` destination_type"
                    }
                }
            },
            "DestinationType": {
                "type": "string",
                "enum": [
                    "http",
                    "email"
                ]
            },
            "DestinationWithTemplate": {
                "type": "object",
                "required": [
                    "name",
                    "url",
                    "method",
                    "template",
                    "emails",
                    "destination_type"
                ],
                "properties": {
                    "destination_type": {
                        "$ref": "#/components/schemas/DestinationType"
                    },
                    "emails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "headers": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "method": {
                        "$ref": "#/components/schemas/HTTPType"
                    },
                    "name": {
                        "type": "string"
                    },
                    "skip_tls_verify": {
                        "type": "boolean"
                    },
                    "template": {
                        "$ref": "#/components/schemas/Template"
                    },
                    "url": {
                        "type": "string"
                    }
                }
            },
            "Folder": {
                "type": "object",
                "required": [
                    "name",
                    "description"
                ],
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "FolderList": {
                "type": "object",
                "required": [
                    "list"
                ],
                "properties": {
                    "list": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Folder"
                        }
                    }
                }
            },
            "FunctionList": {
                "type": "object",
                "required": [
                    "list"
                ],
                "properties": {
                    "list": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Transform"
                        }
                    }
                }
            },
            "HTTPType": {
                "type": "string",
                "enum": [
                    "post",
                    "put",
                    "get"
                ]
            },
            "HealthzResponse": {
                "type": "object",
                "required": [
                    "status"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    }
                }
            },
            "HttpResponse": {
                "type": "object",
                "description": "HTTP response\ncode 200 is success\ncode 400 is error\ncode 404 is not found\ncode 500 is internal server error\ncode 503 is service unavailable\ncode >= 1000 is custom error code\nmessage is the message or error message",
                "required": [
                    "code",
                    "message"
                ],
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0
                    },
                    "error_detail": {
                        "type": "string",
                        "nullable": true
                    },
                    "message": {
                        "type": "string"
                    },
                    "trace_id": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "IngestionPasscode": {
                "type": "object",
                "required": [
                    "passcode",
                    "user"
                ],
                "properties": {
                    "passcode": {
                        "type": "string"
                    },
                    "user": {
                        "type": "string"
                    }
                }
            },
            "IngestionResponse": {
                "type": "object",
                "required": [
                    "code"
                ],
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0
                    },
                    "error": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StreamStatus"
                        }
                    }
                }
            },
            "Layout": {
                "type": "object",
                "required": [
                    "x",
                    "y",
                    "w",
                    "h",
                    "i",
                    "panelId",
                    "static"
                ],
                "properties": {
                    "h": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "i": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "panelId": {
                        "type": "string"
                    },
                    "static": {
                        "type": "boolean"
                    },
                    "w": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "x": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "y": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "ListStream": {
                "type": "object",
                "required": [
                    "list"
                ],
                "properties": {
                    "list": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Stream"
                        }
                    }
                }
            },
            "Metadata": {
                "type": "object",
                "required": [
                    "metric_type",
                    "metric_family_name",
                    "help",
                    "unit"
                ],
                "properties": {
                    "help": {
                        "type": "string"
                    },
                    "metric_family_name": {
                        "type": "string"
                    },
                    "metric_type": {
                        "$ref": "#/components/schemas/MetricType"
                    },
                    "unit": {
                        "type": "string"
                    }
                }
            },
            "MetricType": {
                "type": "string",
                "enum": [
                    "Unknown",
                    "Counter",
                    "Gauge",
                    "Histogram",
                    "GaugeHistogram",
                    "ExponentialHistogram",
                    "Summary",
                    "Info",
                    "StateSet",
                    "Empty"
                ]
            },
            "MoveDashboard": {
                "type": "object",
                "required": [
                    "from",
                    "to"
                ],
                "properties": {
                    "from": {
                        "type": "string"
                    },
                    "to": {
                        "type": "string"
                    }
                }
            },
            "Operator": {
                "type": "string",
                "enum": [
                    "=",
                    "!=",
                    ">",
                    ">=",
                    "<",
                    "<=",
                    "Contains",
                    "NotContains"
                ]
            },
            "OrgDetails": {
                "type": "object",
                "required": [
                    "id",
                    "identifier",
                    "name",
                    "user_email",
                    "ingest_threshold",
                    "search_threshold",
                    "type",
                    "UserObj"
                ],
                "properties": {
                    "UserObj": {
                        "$ref": "#/components/schemas/OrgUser"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "identifier": {
                        "type": "string"
                    },
                    "ingest_threshold": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "search_threshold": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "type": {
                        "type": "string"
                    },
                    "user_email": {
                        "type": "string"
                    }
                }
            },
            "OrgSummary": {
                "type": "object",
                "required": [
                    "streams",
                    "functions",
                    "alerts"
                ],
                "properties": {
                    "alerts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Alert"
                        }
                    },
                    "functions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Transform"
                        }
                    },
                    "streams": {
                        "$ref": "#/components/schemas/StreamSummary"
                    }
                }
            },
            "OrgUser": {
                "type": "object",
                "required": [
                    "first_name",
                    "last_name",
                    "email"
                ],
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    }
                }
            },
            "OrganizationResponse": {
                "type": "object",
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrgDetails"
                        }
                    }
                }
            },
            "OrganizationSetting": {
                "type": "object",
                "properties": {
                    "scrape_interval": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Ideally this should be the same as prometheus-scrape-interval (in\nseconds).",
                        "minimum": 0
                    }
                }
            },
            "OrganizationSettingResponse": {
                "type": "object",
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/OrganizationSetting"
                    }
                }
            },
            "Panel": {
                "type": "object",
                "required": [
                    "id",
                    "type",
                    "fields",
                    "config",
                    "query",
                    "customQuery"
                ],
                "properties": {
                    "config": {
                        "$ref": "#/components/schemas/PanelConfig"
                    },
                    "customQuery": {
                        "type": "boolean"
                    },
                    "fields": {
                        "$ref": "#/components/schemas/PanelFields"
                    },
                    "id": {
                        "type": "string"
                    },
                    "query": {
                        "type": "string"
                    },
                    "queryType": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "PanelConfig": {
                "type": "object",
                "required": [
                    "title",
                    "description",
                    "show_legends"
                ],
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "legends_position": {
                        "type": "string",
                        "nullable": true
                    },
                    "promql_legend": {
                        "type": "string",
                        "nullable": true
                    },
                    "show_legends": {
                        "type": "boolean"
                    },
                    "title": {
                        "type": "string"
                    },
                    "unit": {
                        "type": "string",
                        "nullable": true
                    },
                    "unit_custom": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "PanelFields": {
                "type": "object",
                "required": [
                    "stream",
                    "stream_type",
                    "x",
                    "y",
                    "filter"
                ],
                "properties": {
                    "filter": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PanelFilter"
                        }
                    },
                    "stream": {
                        "type": "string"
                    },
                    "stream_type": {
                        "$ref": "#/components/schemas/StreamType"
                    },
                    "x": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AxisItem"
                        }
                    },
                    "y": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AxisItem"
                        }
                    }
                }
            },
            "PanelFilter": {
                "type": "object",
                "required": [
                    "type",
                    "values",
                    "column"
                ],
                "properties": {
                    "column": {
                        "type": "string"
                    },
                    "operator": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string",
                        "nullable": true
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "PartitionTimeLevel": {
                "type": "string",
                "enum": [
                    "unset",
                    "hourly",
                    "daily"
                ]
            },
            "PasscodeResponse": {
                "type": "object",
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/IngestionPasscode"
                    }
                }
            },
            "QueryCondition": {
                "type": "object",
                "properties": {
                    "aggregation": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Aggregation"
                            }
                        ],
                        "nullable": true
                    },
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Condition"
                        },
                        "nullable": true
                    },
                    "promql": {
                        "type": "string",
                        "nullable": true
                    },
                    "promql_condition": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Condition"
                            }
                        ],
                        "nullable": true
                    },
                    "sql": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/QueryType"
                    }
                }
            },
            "QueryData": {
                "type": "object",
                "required": [
                    "stream_type",
                    "stream",
                    "field"
                ],
                "properties": {
                    "field": {
                        "type": "string"
                    },
                    "max_record_size": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "stream": {
                        "type": "string"
                    },
                    "stream_type": {
                        "$ref": "#/components/schemas/StreamType"
                    }
                }
            },
            "QueryInfo": {
                "type": "object",
                "required": [
                    "sql",
                    "start_time",
                    "end_time"
                ],
                "properties": {
                    "end_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "sql": {
                        "type": "string"
                    },
                    "start_time": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "QueryStatus": {
                "type": "object",
                "required": [
                    "trace_id",
                    "status",
                    "created_at",
                    "started_at"
                ],
                "properties": {
                    "created_at": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "org_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "query": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/QueryInfo"
                            }
                        ],
                        "nullable": true
                    },
                    "scan_stats": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ScanStats"
                            }
                        ],
                        "nullable": true
                    },
                    "started_at": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "status": {
                        "type": "string"
                    },
                    "stream_type": {
                        "type": "string",
                        "nullable": true
                    },
                    "trace_id": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "QueryStatusResponse": {
                "type": "object",
                "required": [
                    "status"
                ],
                "properties": {
                    "status": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/QueryStatus"
                        }
                    }
                }
            },
            "QueryType": {
                "type": "string",
                "enum": [
                    "custom",
                    "sql",
                    "promql"
                ]
            },
            "RecordStatus": {
                "type": "object",
                "required": [
                    "successful",
                    "failed"
                ],
                "properties": {
                    "error": {
                        "type": "string"
                    },
                    "failed": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0
                    },
                    "successful": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0
                    }
                }
            },
            "RequestEncoding": {
                "type": "string",
                "enum": [
                    "base64",
                    "Empty"
                ]
            },
            "ResponseNodeTook": {
                "type": "object",
                "required": [
                    "node",
                    "is_ingester",
                    "took"
                ],
                "properties": {
                    "is_ingester": {
                        "type": "boolean"
                    },
                    "node": {
                        "type": "string"
                    },
                    "took": {
                        "type": "integer",
                        "minimum": 0
                    }
                }
            },
            "ResponseTook": {
                "type": "object",
                "required": [
                    "total",
                    "wait_queue",
                    "cluster_total",
                    "cluster_wait_queue"
                ],
                "properties": {
                    "cluster_total": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "cluster_wait_queue": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResponseNodeTook"
                        }
                    },
                    "total": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "wait_queue": {
                        "type": "integer",
                        "minimum": 0
                    }
                }
            },
            "RumIngestionResponse": {
                "type": "object",
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/RumIngestionToken"
                    }
                }
            },
            "RumIngestionToken": {
                "type": "object",
                "required": [
                    "user"
                ],
                "properties": {
                    "rum_token": {
                        "type": "string",
                        "nullable": true
                    },
                    "user": {
                        "type": "string"
                    }
                }
            },
            "ScanStats": {
                "type": "object",
                "required": [
                    "files",
                    "records",
                    "original_size",
                    "compressed_size",
                    "querier_files",
                    "querier_memory_cached_files",
                    "querier_disk_cached_files"
                ],
                "properties": {
                    "compressed_size": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "files": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "original_size": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "querier_disk_cached_files": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "querier_files": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "querier_memory_cached_files": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "records": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "SearchEventType": {
                "type": "string",
                "enum": [
                    "UI",
                    "Dashboards",
                    "Reports",
                    "Alerts",
                    "Values",
                    "Other",
                    "RUM"
                ]
            },
            "SearchPartitionRequest": {
                "type": "object",
                "required": [
                    "sql",
                    "start_time",
                    "end_time"
                ],
                "properties": {
                    "clusters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "encoding": {
                        "$ref": "#/components/schemas/RequestEncoding"
                    },
                    "end_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "regions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sql": {
                        "type": "string"
                    },
                    "sql_mode": {
                        "type": "string"
                    },
                    "start_time": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "SearchPartitionResponse": {
                "type": "object",
                "required": [
                    "trace_id",
                    "file_num",
                    "records",
                    "original_size",
                    "compressed_size",
                    "partitions"
                ],
                "properties": {
                    "compressed_size": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "file_num": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "original_size": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "partitions": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    },
                    "records": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "trace_id": {
                        "type": "string"
                    }
                }
            },
            "SearchQuery": {
                "type": "object",
                "required": [
                    "sql"
                ],
                "properties": {
                    "end_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "from": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "query_context": {
                        "type": "string",
                        "nullable": true
                    },
                    "query_fn": {
                        "type": "string",
                        "nullable": true
                    },
                    "query_type": {
                        "type": "string"
                    },
                    "quick_mode": {
                        "type": "boolean"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "skip_wal": {
                        "type": "boolean"
                    },
                    "sort_by": {
                        "type": "string",
                        "nullable": true
                    },
                    "sql": {
                        "type": "string"
                    },
                    "sql_mode": {
                        "type": "string"
                    },
                    "start_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "track_total_hits": {
                        "type": "boolean"
                    },
                    "uses_zo_fn": {
                        "type": "boolean"
                    }
                }
            },
            "SearchRequest": {
                "type": "object",
                "required": [
                    "query"
                ],
                "properties": {
                    "aggs": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "clusters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "encoding": {
                        "$ref": "#/components/schemas/RequestEncoding"
                    },
                    "query": {
                        "$ref": "#/components/schemas/SearchQuery"
                    },
                    "regions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "search_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SearchEventType"
                            }
                        ],
                        "nullable": true
                    },
                    "timeout": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "SearchResponse": {
                "type": "object",
                "required": [
                    "took",
                    "hits",
                    "total",
                    "from",
                    "size",
                    "cached_ratio",
                    "scan_size",
                    "scan_records"
                ],
                "properties": {
                    "aggs": {
                        "type": "object"
                    },
                    "cached_ratio": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "columns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "from": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "function_error": {
                        "type": "string"
                    },
                    "histogram_interval": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "hits": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "is_partial": {
                        "type": "boolean"
                    },
                    "new_end_time": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "new_start_time": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "response_type": {
                        "type": "string"
                    },
                    "result_cache_ratio": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "scan_records": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "scan_size": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "took": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "took_detail": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ResponseTook"
                            }
                        ],
                        "nullable": true
                    },
                    "total": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "trace_id": {
                        "type": "string"
                    }
                }
            },
            "ShardResponse": {
                "type": "object",
                "required": [
                    "total",
                    "successful",
                    "failed"
                ],
                "properties": {
                    "failed": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "successful": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "total": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "SignInResponse": {
                "type": "object",
                "required": [
                    "status",
                    "message"
                ],
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "status": {
                        "type": "boolean"
                    }
                }
            },
            "Stream": {
                "type": "object",
                "required": [
                    "name",
                    "storage_type",
                    "stream_type",
                    "stats",
                    "settings"
                ],
                "properties": {
                    "metrics_meta": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Metadata"
                            }
                        ],
                        "nullable": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "schema": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StreamProperty"
                        }
                    },
                    "settings": {
                        "$ref": "#/components/schemas/StreamSettings"
                    },
                    "stats": {
                        "$ref": "#/components/schemas/StreamStats"
                    },
                    "storage_type": {
                        "type": "string"
                    },
                    "stream_type": {
                        "$ref": "#/components/schemas/StreamType"
                    }
                }
            },
            "StreamDeleteFields": {
                "type": "object",
                "required": [
                    "fields"
                ],
                "properties": {
                    "fields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "StreamFunctionsList": {
                "type": "object",
                "required": [
                    "list"
                ],
                "properties": {
                    "list": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StreamTransform"
                        }
                    }
                }
            },
            "StreamOrder": {
                "type": "object",
                "properties": {
                    "isRemoved": {
                        "type": "boolean"
                    },
                    "order": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0
                    },
                    "stream": {
                        "type": "string"
                    },
                    "streamType": {
                        "$ref": "#/components/schemas/StreamType"
                    }
                }
            },
            "StreamPartition": {
                "type": "object",
                "required": [
                    "field"
                ],
                "properties": {
                    "disabled": {
                        "type": "boolean"
                    },
                    "field": {
                        "type": "string"
                    },
                    "types": {
                        "$ref": "#/components/schemas/StreamPartitionType"
                    }
                }
            },
            "StreamPartitionType": {
                "oneOf": [
                    {
                        "type": "string",
                        "enum": [
                            "value"
                        ]
                    },
                    {
                        "type": "object",
                        "required": [
                            "hash"
                        ],
                        "properties": {
                            "hash": {
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0
                            }
                        }
                    }
                ]
            },
            "StreamProperty": {
                "type": "object",
                "required": [
                    "name",
                    "type"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "StreamSettings": {
                "type": "object",
                "properties": {
                    "bloom_filter_fields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "data_retention": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "defined_schema_fields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "flatten_level": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "full_text_search_keys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "index_fields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "max_query_range": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "partition_keys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StreamPartition"
                        }
                    },
                    "partition_time_level": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PartitionTimeLevel"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "StreamStats": {
                "type": "object",
                "required": [
                    "created_at",
                    "doc_time_min",
                    "doc_time_max",
                    "doc_num",
                    "file_num",
                    "storage_size",
                    "compressed_size"
                ],
                "properties": {
                    "compressed_size": {
                        "type": "number",
                        "format": "double"
                    },
                    "created_at": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "doc_num": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "doc_time_max": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "doc_time_min": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "file_num": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "storage_size": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "StreamStatus": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/RecordStatus"
                    },
                    {
                        "type": "object",
                        "required": [
                            "name"
                        ],
                        "properties": {
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "StreamSummary": {
                "type": "object",
                "required": [
                    "num_streams",
                    "total_storage_size",
                    "total_compressed_size"
                ],
                "properties": {
                    "num_streams": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "total_compressed_size": {
                        "type": "number",
                        "format": "double"
                    },
                    "total_storage_size": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "StreamTransform": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Transform"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "is_removed": {
                                "type": "boolean"
                            },
                            "order": {
                                "type": "integer",
                                "format": "int32",
                                "minimum": 0
                            },
                            "stream": {
                                "type": "string"
                            },
                            "stream_type": {
                                "$ref": "#/components/schemas/StreamType"
                            }
                        }
                    }
                ]
            },
            "StreamType": {
                "type": "string",
                "enum": [
                    "logs",
                    "metrics",
                    "traces",
                    "enrichment_tables",
                    "file_list",
                    "metadata",
                    "index"
                ]
            },
            "SyslogRoute": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "orgId": {
                        "type": "string"
                    },
                    "streamName": {
                        "type": "string"
                    },
                    "subnets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "SyslogRoutes": {
                "type": "object",
                "required": [
                    "routes"
                ],
                "properties": {
                    "routes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SyslogRoute"
                        }
                    }
                }
            },
            "Template": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "string"
                    },
                    "isDefault": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/DestinationType"
                    }
                }
            },
            "Transform": {
                "type": "object",
                "required": [
                    "function"
                ],
                "properties": {
                    "function": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "numArgs": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0
                    },
                    "params": {
                        "type": "string"
                    },
                    "streams": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StreamOrder"
                        },
                        "nullable": true
                    },
                    "transType": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "minimum": 0
                    }
                }
            },
            "TriggerCondition": {
                "type": "object",
                "required": [
                    "period"
                ],
                "properties": {
                    "cron": {
                        "type": "string"
                    },
                    "frequency": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "frequency_type": {
                        "$ref": "#/components/schemas/AlertFrequencyType"
                    },
                    "operator": {
                        "$ref": "#/components/schemas/Operator"
                    },
                    "period": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "silence": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "threshold": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "UpdateUser": {
                "type": "object",
                "properties": {
                    "change_password": {
                        "type": "boolean"
                    },
                    "first_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "last_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "new_password": {
                        "type": "string",
                        "nullable": true
                    },
                    "old_password": {
                        "type": "string",
                        "nullable": true
                    },
                    "role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserRole"
                            }
                        ],
                        "nullable": true
                    },
                    "token": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "UpdateViewRequest": {
                "type": "object",
                "required": [
                    "data",
                    "view_name"
                ],
                "properties": {
                    "data": {
                        "description": "Base64 encoded string, containing all the data for a given view.\nThis data is expected to be versioned so that the frontend can\ndeserialize as required."
                    },
                    "view_name": {
                        "type": "string",
                        "description": "User-readable name of the view, doesn't need to be unique."
                    }
                }
            },
            "UserList": {
                "type": "object",
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserResponse"
                        }
                    }
                }
            },
            "UserOrgRole": {
                "type": "object",
                "required": [
                    "role"
                ],
                "properties": {
                    "role": {
                        "$ref": "#/components/schemas/UserRole"
                    }
                }
            },
            "UserRequest": {
                "type": "object",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "is_external": {
                        "type": "boolean",
                        "description": "Is the user created via ldap flow."
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "UserResponse": {
                "type": "object",
                "required": [
                    "email",
                    "role"
                ],
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "is_external": {
                        "type": "boolean"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "role": {
                        "$ref": "#/components/schemas/UserRole"
                    }
                }
            },
            "UserRole": {
                "type": "string",
                "enum": [
                    "admin",
                    "member",
                    "root"
                ]
            },
            "VariableList": {
                "type": "object",
                "required": [
                    "type",
                    "name",
                    "label"
                ],
                "properties": {
                    "label": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomFieldsOption"
                        },
                        "nullable": true
                    },
                    "query_data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/QueryData"
                            }
                        ],
                        "nullable": true
                    },
                    "type": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "Variables": {
                "type": "object",
                "required": [
                    "list"
                ],
                "properties": {
                    "list": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VariableList"
                        }
                    }
                }
            },
            "View": {
                "type": "object",
                "required": [
                    "org_id",
                    "data",
                    "view_id",
                    "view_name"
                ],
                "properties": {
                    "data": {},
                    "org_id": {
                        "type": "string"
                    },
                    "view_id": {
                        "type": "string"
                    },
                    "view_name": {
                        "type": "string"
                    }
                }
            },
            "ViewWithoutData": {
                "type": "object",
                "description": "Save the bandwidth for a given view, without sending the actual data\nThis is expected to be used for listing views.",
                "required": [
                    "org_id",
                    "view_id",
                    "view_name"
                ],
                "properties": {
                    "org_id": {
                        "type": "string"
                    },
                    "view_id": {
                        "type": "string"
                    },
                    "view_name": {
                        "type": "string"
                    }
                }
            },
            "ViewsWithoutData": {
                "type": "object",
                "required": [
                    "views"
                ],
                "properties": {
                    "views": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ViewWithoutData"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "Authorization": {
                "type": "apiKey",
                "in": "header",
                "name": "Authorization"
            }
        }
    },
    "tags": [
        {
            "name": "Meta",
            "description": "Meta details about the OpenObserve state itself. e.g. healthz"
        },
        {
            "name": "Auth",
            "description": "User login authentication"
        },
        {
            "name": "Logs",
            "description": "Logs data ingestion operations"
        },
        {
            "name": "Dashboards",
            "description": "Dashboard operations"
        },
        {
            "name": "Search",
            "description": "Search/Query operations"
        },
        {
            "name": "Saved Views",
            "description": "Collection of saved search views for easy retrieval"
        },
        {
            "name": "Alerts",
            "description": "Alerts retrieval & management operations"
        },
        {
            "name": "Functions",
            "description": "Functions retrieval & management operations"
        },
        {
            "name": "Organizations",
            "description": "Organizations retrieval & management operations"
        },
        {
            "name": "Streams",
            "description": "Stream retrieval & management operations"
        },
        {
            "name": "Users",
            "description": "Users retrieval & management operations"
        },
        {
            "name": "KV",
            "description": "Key Value retrieval & management operations"
        },
        {
            "name": "Metrics",
            "description": "Metrics data ingestion operations"
        },
        {
            "name": "Traces",
            "description": "Traces data ingestion operations"
        },
        {
            "name": "Syslog Routes",
            "description": "Syslog Routes retrieval & management operations"
        },
        {
            "name": "Clusters",
            "description": "Super cluster operations"
        }
    ]
}